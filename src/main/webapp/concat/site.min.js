"undefined"==typeof File&&(File=function(){return!1}),"undefined"==typeof console&&(console={log:function(){}}),function(){function a(a,b){b.otherwise("/welcome"),a.state("welcome",{url:"/welcome",templateUrl:"views/login.html",controller:"AuthCtrl as auth"}).state("profile",{url:"/profile",templateUrl:"views/profile.html",controller:"ProfileCtrl as profile"})}function b(){}function c(a){vm=this,vm.test="altceva",vm.login=function(){var b="test",c="pass",d={username:b,password:c};a.createItem(d,apiPaths.login)}}function d(a,b,c,d){function e(a){console.log("onLoadImagsSuccess RIGHT ONE"),_(a).forEach(function(a){function b(b){console.log("onLoadImageCommentsSuccess",b),a.imageComments=b}function d(a){console.log("onLoadImageCommentsError: no comments found for this image",a)}console.log(a),a.showComments=!1,c.loadStuff("http://localhost:8080/sec/resources/comment?imageId="+a.imageid).then(angular.bind(this,b),angular.bind(this,d))}),console.log("Images after adding comments are: ",a),vm.pictures=a}function f(a){console.log("onLoadImagsError",a)}function g(a){console.log("onCreateCommentSuccess",a),i(vm.userId)}function h(a){console.log("onCreateCommentError",a)}function i(a){c.loadStuff("http://localhost:8080/sec/resources/file/getallimages?id="+a).then(angular.bind(this,e),angular.bind(this,f))}vm=this,vm.profiletest="Profile Test",vm.myPic="",vm.userId="1",vm.imageId="1",vm.uploadPic=function(a){console.log("uploadPic clicked!!!",vm.myPic,a)},vm.addComment=function(a,b){commentData={comment:a,userId:vm.userId,imageId:b},vm.commBody="",d.createItem(commentData,"http://localhost:8080/sec/resources/comment").then(angular.bind(this,g),angular.bind(this,h))},i(vm.userId)}function e(a,b){function c(a,b){var c={id:"d2b97532-e8c5-e411-8270-f0def103cfd0",algorithm:"sha256",key:"7b76ae41-def3-e411-8030-0c8bfd2336cd"},d={credentials:c,ext:"XRequestHeaderToProtect:secret"},e=window.location.href,f=e.split("/");e=f[0]+"//"+f[2];var g=hawk.client.header(e+a,b,d);return null!=g.err?(alert(g.err),null):g}function d(c,d){var e=a.defer();return console.log(c),b({method:"POST",url:d,headers:{"Content-Type":"application/x-www-form-urlencoded"},data:$.param(c)}).success(function(a){e.resolve(a)}).error(function(){e.reject("Failed to create item")}),e.promise}function e(d,e){var f=a.defer(),g=c(e,"POST");return b.post(e,d,{transformRequest:angular.identity,headers:{"Content-Type":void 0,XRequestHeaderToProtect:"secret",Authorization:g.field}}).success(function(a){f.resolve(a)}).error(function(){f.reject("Failed to update item")}),f.promise}function f(c,d){var e=a.defer();return b["delete"](d+"/"+c.id).success(function(a){e.resolve(a)}).error(function(){e.reject("Failed to delete item with id"+c.id)}),e.promise}var g={createItem:d,updateItem:e,deleteItem:f};return g}function f(a,b){function c(c){var d=a.defer();return b.get(c).success(function(a){d.resolve(a)}).error(function(){d.reject("Failed to load "+c)}),d.promise}var d={loadStuff:c};return d}a.$inject=["$stateProvider","$urlRouterProvider"],c.$inject=["CrudService"],d.$inject=["$rootScope","$scope","DataService","CrudService"],e.$inject=["$q","$http"],f.$inject=["$q","$http"],angular.element(document).ready(function(g){console.log("angular is ready test");var h=[];h.push("ui.router"),angular.module("mySASSFrontend",h).value("events",{}).controller("AuthCtrl",c).controller("ProfileCtrl",d).factory("CrudService",e).factory("DataService",f).config(a).run(b),angular.bootstrap(angular.element("#ng-app"),["mySASSFrontend"])})}();